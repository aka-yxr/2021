//#define _CRT_SECURE_NO_WARNINGS
//#include<stdio.h>
//#include<string.h>
//#include<assert.h>
//#include<errno.h>
//#include<stdlib.h>
//
//typedef int SListDataType;
//
////结点
//typedef struct SListNode
//{
//	int data;
//	struct SListNode* next;
//}SListNode;
//
//void SListPushBack(struct SListNode** pphead, SListDataType x);
//void SListPopBack(struct SListNode** pphead);
//void SListPushFront(struct SListNode** pphead, SListDataType x);
//void SListPopFront(struct SListNode** pphead);
//void SListPrint(const struct SListNode* phead);
//SListNode* SListFind(SListNode* plist, SListDataType x);
//void SListInsertAfter(SListNode* pos, SListDataType x);
//void SListEraseAfter(SListNode* pos);
//
//int main()
//{
//	struct SListNode* pList = NULL;//单链表
//	SListPushBack(&pList, 1);
//	SListPushBack(&pList, 2);
//	SListPushBack(&pList, 3);
//	SListPushBack(&pList, 4);
//
//	SListPrint(pList);
//
//	SListPopBack(&pList);
//	SListPopBack(&pList);
//	SListPopBack(&pList);
//	//SListPopBack(&pList);
//
//	SListPrint(pList);
//
//	SListPushFront(&pList, 9);
//	SListPushFront(&pList, 7);
//	SListPushFront(&pList, 8);
//	SListPrint(pList);
//	SListPopFront(&pList);
//	SListPrint(pList);
//	//SListPopFront(&pList);
////	SListPopFront(&pList);
//	//SListPopFront(&pList);
//	//SListPrint(pList);
//	SListNode* pos = SListFind(pList, 7);
//	if (pos)
//		pos->data = 30;
//	SListPrint(pList);
//
//	return 0;
//}
//
////打印链表
//void SListPrint(const struct SListNode* phead)
//{
//	SListNode* cur = phead;
//	while (cur != NULL)
//	{
//		printf("%d->", cur->data);
//		cur = cur->next;
//	}
//	printf("NULL\n");
//}
//
////开结点
//SListNode* BuySListNode(SListDataType x)
//{
//	SListNode* newNode = (SListNode*)malloc(sizeof(SListNode));
//	if (newNode == NULL)
//	{
//		printf("申请结点失败\n");
//		return 0;
//	}
//	newNode->data = x;
//	newNode->next = NULL;
//
//	return newNode;
//}
//
////尾插
//void SListPushBack(struct SListNode** pphead, SListDataType x)
//{	
//	SListNode* newNode = BuySListNode(x);
//	if (*pphead == NULL)
//	{
//		*pphead = newNode;
//	}
//	else
//	{
//		//找尾
//		SListNode* tail = *pphead;
//		while (tail->next != NULL)
//		{
//			tail = tail->next;
//		}
//
//		tail->next = newNode;
//	}
//	
//}
//
////尾删
//void SListPopBack(struct SListNode** pphead)
//{
//	//1.空
//	//2.一个结点
//	//3.一个以上结点
//	if (*pphead == NULL)
//	{
//		return 0;
//	}
//	else if ((*pphead)->next == NULL)
//	{
//		free(*pphead);
//		*pphead = NULL;
//	}
//	else
//	{
//		SListNode* tail = *pphead;
//		SListNode* prev = NULL;
//		while (tail->next != NULL)
//		{
//			prev = tail;
//			tail = tail->next;
//		}
//		free(tail);
//		tail = NULL;
//		prev->next = NULL;
//	}
//
//}
//
////头插
//void SListPushFront(struct SListNode** pphead, SListDataType x)
//{
//	SListNode* newNode = BuySListNode(x);//开结点
//	newNode->next = *pphead;
//	*pphead = newNode;
//}
//
////头删
//void SListPopFront(struct SListNode** pphead)
//{
//	//1.空
//	//2.一个结点
//	//3.一个以上结点
//	if (*pphead == NULL)
//	{
//		return 0;
//	}
//	else
//	{
//		SListNode* next = (*pphead)->next;
//		free(*pphead);
//
//		*pphead = next;
//	}
//}
//
//
////查找
//SListNode* SListFind(SListNode* plist, SListDataType x)
//{
//	SListNode* cur = plist;
//	while (cur)
//	{
//		if (cur->data == x)
//		{
//			return cur;
//		}
//		cur = cur->next;
//	}
//	return NULL;
//}
//
//void SListInsertAfter(SListNode* pos, SListDataType x)
//{
//	assert(pos);
//	SListNode* newnode = BuySListNode(x);
//	newnode->next = pos->next;
//	pos->next = newnode;
//}
//
//void SListEraseAfter(SListNode* pos)
//{
//	assert(pos);
//	if (pos->next)
//	{
//		SListNode* next = pos->next;
//		SListNode* nextnext = next->next;
//		pos->next = nextnext;
//		free(next);
//	}
//}
