//#define _CRT_SECURE_NO_WARNINGS
//#include<stdio.h>
//#include<string.h>
//#include<assert.h>
//#include<errno.h>
//#include<stdlib.h>
//#include<math.h>
//
////int Fact(int p)
////{
////    int i = 1, sum = 1;
////    for ( i = 1; i < p; i++)
////        sum *= i;
////    return sum;
////
////}
////
////int Sum(int n)
////{
////    int i = 1, sum = 0;
////    for ( i = 1; i <= n; i++)
////    {
////        sum += Fact(i);
////    }
////
////    return sum;
////}
////
////int main()
////{
////    int n;
////    scanf("%d", &n);
////
////    int sum = Sum(n);
////
////    printf("%d\n", sum);
////
////    return 0;
////}
//
////void compare(int* x1, int* x2)
////{
////    int tmp = 0;
////    if (*x1 > *x2)
////    {
////        tmp = *x1;
////        *x1 = *x2;
////        *x2 = tmp;
////    }
////
////}
////
////int main()
////{
////    int a, b, c;
////    scanf("%d%d%d", &a, &b, &c);
////    int tmp = 0;
////    compare(&a, &b);
////    compare(&a, &c);
////    compare(&b, &c);
////
////
////    return 0;
////}
//
////int main()
////{
////    char a[50];
////    char b[10];
////    gets(a);
////    gets(b);
////    int lena = strlen(a);
////    int lenb = strlen(b);
////    for (int i = 0; i < lenb; i++)
////    {
////        for (int j = 0; j < lena; j++)
////        {
////            if (b[i] == a[j])
////            {
////                a[j] == ' ';
////            }
////        }
////    }
////    int space = 0;
////    for (int i = 0; i < lena; i++)
////    {
////        if (a[i] == ' ')
////            space++;
////        else
////        {
////            if (space >= 1)
////                printf(" ");
////            printf("%c", a[i]);
////        }
////    }
////
////    return 0;
////}
//
////int main()
////{
////    int num;
////    scanf("%d", &num);
////    int divisor[25] = { 0 };//用来存放num的因子
////    int k = 0;
////    //把num的所有因子都找出来
////    for (int i = 2; i < sqrt(num); i++)
////    {
////        if (num % i == 0)
////        {
////            divisor[k] = i;
////            k++;
////        }
////    }
////    int maxcount = 0;//用来计最大连续因子的个数
////    int count = 0;
////    int start = 0;//开始
////    int last = 0;//
////    for (int i = 1; i < k ; i++)
////    {
////        if (divisor[i] - 1 == divisor[i - 1])
////        {
////            count++;
////            /*if (count > maxcount)
////                start = i - maxcount-1;*/
////        }
////        else
////        {
////            if (count > maxcount)
////            {
////                maxcount = count;
////                start = i - maxcount-1;
////            }
////            count = 0;
////            //last=i;
////        }
////
////    }
////
////    printf("%d\n", maxcount + 1);
////    for (int i = start; i <= start + maxcount; i++)
////    {
////        printf("%d", divisor[i]);
////        if (i < start + maxcount)
////            printf("*");
////    }
////    printf("\n");
////
////    return 0;
////}
//
