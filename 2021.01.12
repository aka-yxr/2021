//#include<stdio.h>
//
//double fact(int n);
//double factsum(int n);
//
//int main()
//{
//	int n;
//	scanf_s("%d", &n);
//	printf("fact(%d) = %.0f\n", n, fact(n));
//	printf("sum = %.0f\n", factsum(n));
//
//	return 0;
//}
//
//double fact(int n)
//{
//	if (n <= 1)
//		return 1;
//	else
//		return n * fact(n - 1);
//}
//
//double factsum(int n)
//{
//	double sum = 0;
//	for (int i = 1; i <= n; i++)
//		sum += fact(i);
//	return sum;
//}

//#include<stdio.h>
//#include<string.h>
//
//#define MAXS 10
//
//void Shift(char s[]);
//void GetString(char s[]);
//
//int main()
//{
//	char s[MAXS];
//
//	GetString(s);
//	Shift(s);
//	printf(% s\n, s);
//
//	return 0;
//}
//void Shift(char s[])
//{
//	int n = strlen(s);
//	char ch;
//	for (int k = 0; k < 3; k++)
//	{
//		ch = s[0];
//		for (int i = 0; i < n-1; i++)
//			s[i] = s[i + 1];
//		s[n - 1] = ch;
//	}
//}


//#include <stdio.h>
//#include <string.h>
//
//#define MAXS 10
//
//char* str_cat(char* s, char* t);
//
//int main()
//{
//    char* p;
//    char str1[MAXS + MAXS] = { '\0' }, str2[MAXS] = { '\0' };
//
//    scanf("%s%s", str1, str2);
//    p = str_cat(str1, str2);
//    printf("%s\n%s\n", p, str1);
//
//    return 0;
//}
//char* str_cat(char* s, char* t)
//{
//    return strcat(s, t);
//}


//#include <stdio.h>
//#define MAXN 10
//
//struct student {
//    int num;
//    char name[20];
//    int score;
//    char grade;
//};
//
//int set_grade(struct student* p, int n);
//
//int main()
//{
//    struct student stu[MAXN], * ptr;
//    int n, i, count;
//
//    ptr = stu;
//    scanf("%d\n", &n);
//    for (i = 0; i < n; i++) {
//        scanf("%d%s%d", &stu[i].num, stu[i].name, &stu[i].score);
//    }
//    count = set_grade(ptr, n);
//    printf("The count for failed (<60): %d\n", count);
//    printf("The grades:\n");
//    for (i = 0; i < n; i++)
//        printf("%d %s %c\n", stu[i].num, stu[i].name, stu[i].grade);
//    return 0;
//}
//
//int set_grade(struct student* p, int n)
//{
//    int count = 0;
//    for (int i = 0; i < n; i++)
//    {
//        if (p->score < 60)
//        {
//            p->grade = 'D';
//            count++;
//        }
//        else if (p->score >= 60 && p->score <= 69)
//            p->grade = 'C';
//        else if (p->score >= 70 && p->score <= 84)
//            p->grade = 'B';
//        else
//            p->grade = 'A';
//        p++;
//    }
//    return count;
//}

//#include <stdio.h>
//int main()
//{
//    int arr[101] = { 0 };
//    int n = 0;
//    scanf("%d", &n);
//    int i = 0;
//    for (i = 0; i < n; i++)
//    {
//        int m = 0;
//        scanf("%d", &m);
//        arr[m]++;
//    }
//    int x = 0;
//    scanf("%d", &x);
//    printf("%d", arr[x]);
//    return 0;
//}


//#include <stdio.h>
//int is_prime(int n)
//{
//    int i = 0;
//    for (i = 2; i < n; i++)
//    {
//        if (n % i == 0)
//            return 0;
//    }
//    return 1;
//}
//int main()
//{
//    int count = 0;
//    int i = 0;
//    for (i = 100; i <= 999; i++)
//    {
//        //判断i是否为质数
//        if (is_prime(i))
//        {
//            count++;
//        }
//    }
//    printf("%d\n", count);
//    return 0;
//}

//方法1
//#include <stdio.h>
//int main()
//{
//	int n = 0;
//	int arr[100];
//	scanf("%d", &n);
//	int i = 0;
//	for (i = 0; i < n; i++)
//	{
//		scanf("%d", &arr[i]);
//	}
//	//排序
//	for (i = 0; i < n - 1; i++)
//	{
//		int j = 0;
//		for (j = 0; j < n - 1 - i; j++)
//		{
//			if (arr[j] > arr[j + 1])
//			{
//				int tmp = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = tmp;
//			}
//		}
//	}
//	//去重-比较n-1对
//	int j = 0;
//	for (i = 0; i < n - 1; i++)
//	{
//		//把i+1后边的元素往前移动
//		if (arr[i] == arr[i + 1])
//		{
//			int k = 0;
//			for (k = i; k < n - 1; k++)
//			{
//				arr[k] = arr[k + 1];
//			}
//			n--;
//			i--;
//		}
//	}
//	//打印
//	for (i = 0; i < n; i++)
//	{
//		printf("%d ", arr[i]);
//	}
//  return 0;
// }
