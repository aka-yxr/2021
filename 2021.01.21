//#include<stdio.h>
//
//int main()
//{
//    int n, k, a[101], falg = 0;
//    scanf_s("%d\n", &n);
//
//    for (int i = 0; i < n; i++)
//    {
//        scanf_s("%d ", &a[i]);
//    }
//    for (int i = 0; i < n; i++)
//    {
//        k = a[i];
//        while (k != 1)//(3n+1)猜想
//        {
//            if (k % 2 == 0)
//                k = k / 2;
//            else
//                k = (3 * k + 1) / 2;
//
//            for (int j = 0; j < n; j++)//在数组中寻找被覆盖数。若是改为1；
//            {
//              //  if (a[j] == 1)
//                //    break;
//                if (a[j] == k)
//                {
//                    a[j] = 1;
//                    break;
//                }
//            }
//        }
//    }
//
//    //排序
//    int i = 0;
//    for (i = 0; i < n; i++)
//    {
//        int temp;
//        for (int j = i + 1; j < n; j++)
//        {
//            if (a[i] < a[j])
//            {
//                temp = a[i];
//                a[i] = a[j];
//                a[j] = temp;
//            }
//        }
//    }
//    //输出
//    int k = 0, b[101];
//    for (i = 0; i < n - 1; i++)
//        if (a[i] != 1)
//        {
//            b[k] = a[i];
//            k++;
//        }
//    for (i = 0; i < k-1; i++)
//        printf("%d ", a[i]);
//
//    printf("%d", a[i]);
//    return 0;
//}

//数据的存储
//#include<stdio.h>
//
//int check()
//{
//	int a = 1;
//	char* p = &a;
//	//返回1 小端
//	//返回0 大端
//	return *p;
//}
//int main()
//{
//	/*int a = 1;
//	char* p = &a;
//	if (*p == 1)
//		printf("小端\n");
//	else
//		printf("大端\n");*/
//	int ret=check();
//	if (ret == 1)
//		printf("小端\n");
//	else
//		printf("大端\n");
//	return 0;
//}
//指针类型的意义
//1.指针类型决定了指针解引用操作符能访问几个字节
//char*p,*p访问1个字节，int*p ,*p访问4个字节。


//#include<stdio.h>
//
//int main()
//{
//	char a = -1;
//	signed char b = -1;
//	unsigned char c = -1;
//	printf("a=%d,b=%d,c=%d",a, b, c);
//	return 0;
//}
