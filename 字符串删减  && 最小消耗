字符串删减

给定一个由 n 个小写字母构成的字符串。

现在，需要删掉其中的一些字母，使得字符串中不存在连续三个或三个以上的 x。

请问，最少需要删掉多少个字母？

如果字符串本来就不存在连续的三个或三个以上 x，则无需删掉任何字母。

输入格式
第一行包含整数 n。

第二行包含一个长度为 n 的由小写字母构成的字符串。

输出格式
输出最少需要删掉的字母个数。

数据范围
3≤n≤100
输入样例1：
6
xxxiii
输出样例1：
1
输入样例2：
5
xxoxx
输出样例2：
0
输入样例3：
10
xxxxxxxxxx
输出样例3：
8
-----------------------------------------------------------------
AC
若出现了一个字符 xx，则 cntcnt 加一。
若出现了一个其它字符，则 cntcnt 清零。
若当前 cnt=3cnt=3，说明遇到了连续三个 xx，此时需要删除一次。特别地，此时删除最后一个字符 xx 后，可能“补位”的字符仍为 xx，如输入样例 33 所示。此时不能将 cntcnt 清零，而应该减一，然后继续遍历。
-----------------------------------------------------------------
#include<stdio.h>

int main()
{
    int n;
    char str[101];
    scanf("%d",&n);
    getchar();
    gets(str);
    
    int cnt = 0;
    int ret = 0;
    for(int i = 0; i < n ;i++)
    {
        if(str[i] == 'x')
        {
            cnt++;
            if(cnt == 3)
            {
                ret++;
                cnt--;
            }
        }
        else
        {
            cnt = 0;
        }
       
    }
    
    printf("%d\n",ret);
    
    return 0;
}
-----------------------------------------------------------------
-----------------------------------------------------------------
最小消耗
有 n 个怪兽等待你去消灭。

怪兽共分为两种形态，不妨用 0 和 1 来表示。

消灭一个 0 形态的怪兽需要耗费的法力值为 a。

消灭一个 1 形态的怪兽需要耗费的法力值为 b。

你还可以使用改造魔法将 0 形态怪兽改造为 1 形态或将 1 形态怪兽改造为 0 形态。

改造一个怪兽需要耗费的法力值为 c。

请问，将怪兽全部消灭最少需要耗费多少法力值。

输入格式
第一行包含整数 T，表示共有 T 组测试数据。

每组数据第一行包含四个整数 n,a,b,c。

第二行包含一个长度为 n 的 01 字符串，其中的第 i 个字符表示第 i 个怪兽的初始形态。

输出格式
每组数据结果占一行，输出一个整数表示最小消耗。

数据范围
前三个测试点满足 1≤n≤20。
全部测试点满足 1≤T≤10，1≤n,a,b,c≤1000。

输入样例：
6
3 1 1 1
100
5 10 100 1
01010
5 10 1 1
11111
5 1 10 1
11111
12 2 1 10
101110110101
2 100 1 10
00
输出样例：
3
52
5
10
16
22

-----------------------------------------------------------------
AC
比较 a和b+c的大小 和 a+c和b的大小即可
-----------------------------------------------------------------
#include<stdio.h>
#include<string.h>

int main()
{
    int T;
    int n,a,b,c;
    char str[1001];
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d %d %d %d",&n,&a,&b,&c);
        getchar();
        gets(str);
        int len = strlen(str);
        int num[len];
        int cnt = 0;
        for(int i = 0; i < len; i++)
        {
            if(str[i] == '0')
            {
                num[i] = a;
                if((c+b) < a)
                {
                    num[i] = (c+b);
                }
            }
            else
            {
                num[i] = b;
                if((c+a) < b)
                {
                    num[i] = (c+a);
                }
            }
            cnt+=num[i];
        }
        printf("%d\n",cnt);
    }
    
    return 0;
}
-----------------------------------------------------------------
