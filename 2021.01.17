//#include<stdio.h>
//
//int main()
//{
//    int n, a[3] = { 0 }, i = 0;
//    scanf("%d", &n);
//
//    do
//    {
//        a[i] = n % 10;
//        n = n / 10;
//        i++;
//    } while (n > 0);
//    for (int j = 0; j < a[2]; j++)
//        printf("B");
//    for (int j = 0; j < a[1]; j++)
//        printf("S");
//    for (int j = 1; j <= a[0]; j++)
//        printf("%d", j);
//    printf("\n");
//
//    return 0;
//}
/*
 * (3n+1)猜想 的循环计算条件是 数字 != 1
 * 不能被数列中的其他数字所覆盖为“关键数” ----> 能被覆盖的数最终也会变成1；
 * 即 遍历数列，将非关键数改为1后，剩下的就是关键数。
 */
//#include <stdio.h>
//#include <stdlib.h>
//
//int cmp(const void* a, const void* b) {//降序
//    return *(int*)b > * (int*)a;
//}
//int main() {
//    int K; //正整数的数量 
//    scanf("%d", &K);
//    int arr[K]; //创建存放数字的数组 
//    for (int i = 0; i < K; i++) {
//        scanf("%d", &arr[i]);
//    }
//    for (int i = 0; i < K; i++) { //筛选关键数字
//        int num = arr[i];
//        while (num != 1) {//进行(3n+1)猜想
//            if (num % 2 == 0) {
//                num /= 2;
//            }
//            else {
//                num = (3 * num + 1) / 2;
//            }
//            for (int j = 0; j < K; j++) {//遍历数组，如果是被覆盖的数，变为1
//                if (arr[j] == num) {
//                    arr[j] = 1;
//                    break;// 因为数组的数字各不相同，找到被覆盖的即可跳出循环
//                }
//            }
//        }
//    }
//    qsort(arr, K, sizeof(int), cmp); // 快速排序
//    for (int i = 0; arr[i] != 1 && i < K; i++) { //输出关键字 
//        if (i != 0) {
//            printf(" ");
//        }
//        printf("%d", arr[i]);
//    }
//}

//int main()
//{
//    int num[10] = { 1, 6, 3, 9, 1, 6, 5, 2 };
//    qsort(num, 10, sizeof(int), cmp_int);
//    for (int i = 0; i < 10; ++i)
//        printf("%d ", num[i]);
//    printf("\n");
//    return 0;
//}
//int cmp_int(const void* a, const void* b) {
//    int* _a = (int*)a;
//    int* _b = (int*)b;
//    return *_a - *_b;
//}

//#include <stdio.h>
//int main()
//{
//	int K = 0, n = 0;
//	int tabel[101] = { 0 };
//	scanf("%d", &K);
//	//将元素对应位置标记为1 
//	for (int i = 0; i < K; i++)
//	{
//		scanf("%d", &n);
//		tabel[n] = 1;
//	}
//	//遍历数组，求还存在数的猜想数 
//	for (int i = 1; i <= 100; i++)
//	{
//		if (tabel[i])
//		{
//			for (n = i; n > 1; )
//			{
//				if (n % 2)
//				{
//					n = (3 * n + 1) / 2;
//				}
//				else
//				{
//					n /= 2;
//				}
//				//检验猜想数是否存在，需考虑猜想数超出100，数组越界的问题 
//				if (n <= 100 && tabel[n])
//				{
//					tabel[n] = 0;
//					K--;
//				}
//			}
//		}
//	}
//	for (int i = 100; i >= 1; i--)
//	{
//		if (tabel[i] == 1)
//		{
//			printf("%d%c", i, --K ? ' ' : '\0');
//		}
//	}
//
//	return 0;
//}
