#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<string.h>
#include<assert.h>
#include<errno.h>
#include<stdlib.h>

//int func(int n)
//{
//	int i = 0, sum = 0;
//	while (sum < n) 
//		sum += ++i;
//	return i;
//}
//
//int main()
//{
//	int n = 10;
//	int ret = func(n);
//	printf("%d\n", ret);
//	return 0;
//}

//int main()
//{
//	int i = 0;
//	int n = 100;
//	int x = 0;
//	while (n >= (x + 1) * (x + 1))
//	{
//		x = x + 1;
//		i++;
//	}
//	printf("%d\n", i);
//	return 0;
//}


//int main()
//{
//	int n = 100;
//	int i = 0, j = 0, count = 0;
//	for (i = 0; i < n; i++)
//		for (j = i; j > 0; j /= 2)
//		{
//			printf("%d", j);
//			count++;
//		}
//	printf("\n");
//	printf("count=%d\n", count);
//	return 0;
//}

//#include<stdio.h>
//int main()
//{
//    int nums = -600;
//   // scanf("%d", &nums);
//    if(nums==0)
//        printf("ling");
//    if (nums < 0)
//    {
//        printf("fu ");
//        nums = -nums;
//    }
//    int n[999], i = 0;
//    int number = nums;
//    while (number)
//    {
//        n[i] = number % 10;
//        i++;
//        number /= 10;
//    }
//    while (i)
//    {
//        switch (n[i-1])
//        {
//        case 0:printf("ling"); break;
//        case 1:printf("yi"); break;
//        case 2:printf("er"); break;
//        case 3:printf("san"); break;
//        case 4:printf("si"); break;
//        case 5:printf("wu"); break;
//        case 6:printf("liu"); break;
//        case 7:printf("qi"); break;
//        case 8:printf("ba"); break;
//        case 9:printf("jiu"); break;
//        }
//        if (i)
//            printf(" ");
//        i--;
//    }
//
//    return 0;
//}


//#include<stdio.h>
//
//int main()
//{
//    int a, b;
//    scanf("%d %d", &a, &b);
//    int i = a, count = 1, sum = 0;
//    for (i; i <= b; i++, count++)
//    {
//        sum += i;
//        printf("%5d", i);
//        if (count % 5 == 0 && i != b)
//            printf("\n");
//    }
//    printf("\n");
//    printf("Sum = %d", sum);
//    return 0;
//}

//#include<stdio.h>
//
//int main()
//{
//    char ch[1001] = { "0" };
//    int a[10] = { 0 };
//    gets(ch);
//    int i = 0;
//    for (i = 0; ch[i]; i++)
//    {
//        int num = ch[i] - '0';
//        a[num]++;
//    }
//    for (i = 0; i < 10; i++)
//    {
//        if (a[i])
//            printf("%d:%d\n", i, a[i]);
//    }
//
//    return 0;
//}

//#include<stdio.h>
//
//typedef struct
//{
//    char id[20];
//    int try;
//    int x;
//} Stu;
//
//int main()
//{
//    Stu s[1000];
//    int n = 0, i = 0;
//    scanf("%d", &n);
//    for (i = 0; i < n; i++)
//    {
//        getchar();
//        scanf("%s %d %d", s[i].id, &s[i].try, &s[i].x);
//    }
//
//    int m, num;
//    scanf("%d", &m);
//    while (m)
//    {
//        scanf("%d ", &num);
//        for (i = 0; i < n; i++)
//        {
//            if (num == s[i].try)
//                printf("%s %d\n", s[i].id, s[i].x);
//        }
//        m--;
//    }
//
//    return 0;
//}

//#include<stdio.h>
//#include<string.h>
//#include<ctype.h>
//
//int main()
//{
//    int gn = 0, pn = 0, ln = 0, tn = 0, alln = 0;
//    char ch[10001] = { '0' };
//    scanf("%s", ch);
//    int len = strlen(ch);
//    int i = 0;
//    for (i = 0; i < len; i++)
//    {
//        ch[i]= toupper(ch[i]);
//    }
//    for (i = 0; i < len; i++)
//    {
//       
//        if (ch[i] == 'G' || ch[i] == 'g')
//            gn++;
//        else if (ch[i] == 'P' || ch[i] == 'p')
//            pn++;
//        else if (ch[i] == 'L' || ch[i] == "l")
//            ln++;
//        else if (ch[i] == 'T' || ch[i] == 't')
//            tn++;
//    }
//    alln = gn + pn + ln + tn;
//    for (i = 0; i < alln; i++)
//    {
//        if (gn)
//        {
//            printf("G");
//            gn--;
//        }
//        if (pn)
//        {
//            printf("P");
//            pn--;
//        }
//        if (ln)
//        {
//            printf("L");
//            ln--;
//        }
//        if (tn)
//        {
//            printf("T");
//            tn--;
//        }
//    }
//
//    return 0;
//}

