//#include<stdio.h>
//
//int main()
//{
//    int A,B,Da,Db;
//    
//    scanf("%d %d %d %d",&A,&Da,&B,&Db);
//    
//    int Pa=0,Pb=0,xa,xb;
//    while(A>0)//求Pa
//    {
//        xa=A%10;
//        A=A/10;
//        if(xa==Da)
//            Pa=Pa*10+xa;
//    }
//    while(B>0)//求Pb
//    {
//        xb=B%10;
//        B=B/10;
//        if(xb==Db)
//            Pb=Pb*10+xb;
//    }
//    
//    printf("%d\n",Pa+Pb);
//    
//    return 0;
//}

//#define _CRT_SECURE_NO_WARNINGS
//#include<stdio.h>
//
//int main()
//{
//    //A B 用来记录胜 平 负的次数。
//    int n, A[3] = { 0,0,0}, B[3] = { 0,0,0 };
//
//    //用来记录获胜最多的是什么
//    int jia[3] = { 0,0, 0}, yi[3] = { 0,0, 0};
//    //C B J
//    char a, b;//a-甲 b-乙
//    scanf_s("%d", &n);
//
//    for (int i = 0; i < n; i++)
//    {
//        scanf("%c %c", &a, &b);
//        switch (a)
//        {
//        case 'B':
//            if (b == 'B')//平局
//            {
//                A[1]++;
//                B[1]++;
//            }
//            else if (b == 'J')//乙胜
//            {
//                A[2]++;
//                B[0]++;
//                yi[2]++;
//            }
//            else if (b == 'C')//甲胜
//            {
//                A[0]++;
//                B[2]++;
//                jia[1]++;
//            }
//            break;
//        case 'C':
//            if (b == 'C')//平局
//            {
//                A[1]++;
//                B[1]++;
//            }
//            else if (b == 'B')//乙胜
//            {
//                A[2]++;
//                B[0]++;
//                yi[1]++;
//            }
//            else if (b == 'J')//甲胜
//            {
//                A[0]++;
//                B[2]++;
//                jia[0]++;
//            }
//            break;
//        case 'J':
//            if (b == 'J')//平局
//            {
//                A[1]++;
//                B[1]++;
//            }
//            else if (b == 'C')//乙胜
//            {
//                A[2]++;
//                B[0]++;
//                yi[0]++;
//            }
//            else if (b == 'B')//甲胜
//            {
//                A[0]++;
//                B[2]++;
//                jia[2]++;
//            }
//            break;
//        }
//    }
//    for (int i = 0; i < 3; i++)
//        printf("%d ", A[i]);
//    printf("\n");
//    for (int i = 0; i < 3; i++)
//        printf("%d ", B[i]);
//    printf("\n");
//    int max1 = jia[0], max2 = yi[0], k1 = 0, k2 = 0;
//    //寻找那种状态获胜最多
//    for (int j = 1; j < 3; j++)
//    {
//        if (max1 < jia[j])
//        {
//            max1 = jia[j];
//            k1 = j;
//        }
//        if (max2 < yi[j])
//        {
//            max2 = yi[j];
//            k2 = j;
//        }
//    }
//    if (k1 == 0)
//        printf("C ");
//    else if (k1 == 1)
//        printf("B ");
//    else if (k1 == 2)
//        printf("J ");
//    if (k2 == 0)
//        printf("C ");
//    else if (k2 == 1)
//        printf("B ");
//    else if (k2 == 2)
//        printf("J ");
//    printf("\n");
//    return 0;
//}

//#include<stdio.h>
//
//int main()
//{
//    //A B 用来记录胜 平 负的次数。
//    int n, A[3] = { 0 }, B[3] = { 0 };
//
//    //用来记录获胜最多的是什么
//    int jia[3] = { 0 }, yi[3] = { 0 };
//    //B C J
//    char a, b;//a-甲 b-乙
//    scanf("%d", &n);
//
//    for (int i = 0; i < n; i++)
//    {
//        getchar();
//        scanf("%c %c", &a, &b);
//        if (a == b)//平局
//        {
//            A[1]++;
//            B[1]++;
//        }
//        if (a == 'C' && b == 'J' || a == 'B' && b == 'C' || a == 'J' && b == 'B')//甲胜 乙负
//        {
//            A[0]++;
//            B[2]++;
//            if (a == 'B')
//                jia[0]++;
//            else if (a == 'C')
//                jia[1]++;
//            else if (a == 'J')
//                jia[2]++;
//        }
//        if (a == 'C' && b == 'B' || a == 'B' && b == 'J' || a == 'J' && b == 'C')//甲负 乙胜
//        {
//            A[2]++;
//            B[0]++;
//            if (b == 'B')
//                yi[0]++;
//            else if (b == 'C')
//                yi[1]++;
//            else if (b == 'J')
//                yi[2]++;
//        }
//    }
//    int i = 0, k = 0;
//    for (i = 0; i < 2; i++)
//        printf("%d ", A[i]);
//    printf("%d", A[i]);
//    printf("\n");
//    for (k = 0; k < 2; k++)
//        printf("%d ", B[k]);
//    printf("%d", B[k]);
//    printf("\n");
//    int max1 = jia[0], max2 = yi[0], k1 = 0, k2 = 0;
//    //寻找那种状态获胜最多
//    for (int j = 1; j < 3; j++)
//    {
//        if (max1 < jia[j])
//        {
//            max1 = jia[j];
//            k1 = j;
//        }
//        if (max2 < yi[j])
//        {
//            max2 = yi[j];
//            k2 = j;
//        }
//    }
//    if (k1 == 0)
//        printf("B ");
//    else if (k1 == 1)
//        printf("C ");
//    else if (k1 == 2)
//        printf("J ");
//    if (k2 == 0)
//        printf("B");
//    else if (k2 == 1)
//        printf("C");
//    else if (k2 == 2)
//        printf("J");
//    printf("\n");
//    return 0;
//}
