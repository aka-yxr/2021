#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<string.h>
#include<assert.h>
#include<errno.h>
#include<stdlib.h>
#include<stdbool.h>
#include<math.h>


//算面积--3789.86
//int main()
//{
//	double c1 = (52.1 + 68.2 + 33.4)/2;
//	double c2 = (68.2 + 57.2 + 71.9)/2;
//	double c3 = (71.9 + 51.9 + 43.5)/2;
//	double s1 = sqrt(c1 * (c1 - 52.1) * (c1 - 68.2) * (c1 - 33.4));
//	double s2 = sqrt(c2 * (c2 - 68.2) * (c2 - 57.2) * (c2 - 71.9));
//	double s3 = sqrt(c3 * (c3 - 71.9) * (c3 - 51.9) * (c3 - 43.5));
//	double s = s1 + s2 + s3;
//	printf("s = %.2f\n", s);
//}


//巧排扑克牌
//int main()
//{
//
//    int p[100] = { 0 };
//    int first, last;
//    //刚开始的时候，只有一张牌K，所以头为0，尾为1；
//    first = 0, last = 1;
//    p[0] = 13;
//    for (int i = 12; i >= 1; i--)
//    {
//        p[last++] = i;
//        p[last++] = p[first++];
//    }
//    for (int i = last-1; i >=first; i--)
//    {
//        if (p[i] == 1)
//            printf("A，");
//        else if (p[i] == 11)
//            printf("J，");
//        else if (p[i] == 12)
//            printf("Q，");
//        else if (p[i] == 13)
//            printf("K，");
//        else
//            printf("%d，", p[i]);
//    }
//    return 0;
//}

////卢卡斯数列
////当用正常手段解不出来的时候，可以灵活变换一下。
////比赛中求不出来具体值的时候，也可以把所有结果打印除了去寻找最优解。
//int main(int argc, char* argv[])
//{
//    // 请在此输入您的代码
//    double lks[10000] = { 0 };
//    lks[0] = 1;
//    lks[1] = 3;
//    double tmp = 0;
//    for (int i = 2;; i++)
//    {
//        lks[i] = lks[i - 1] + lks[i - 2];
//        tmp = (lks[i - 1] / lks[i]) * 1000000;
//        int n = tmp;
//        if (abs(n - 618034) < 1)
//        {
//            printf("%.0f/%.0f\n", lks[i - 1], lks[i ]);
//            break;
//        }
//    }
//    return 0;
//}

//int main(int argc, char* argv[])
//{
//    // 请在此输入您的代码
//    int year, day, x;
//    for (year = 1912; year < 2012; year++)
//    {
//        for (day = 0; day < 31; day++)
//        {
//            x = year * 10000 + 600 + day;
//            if (x % 2012 == 0 && x % 3 == 0 && x % 12 == 0)
//            {
//                printf("%d", x);
//            }
//        }
//    }
//    return 0;
//}

//int main()
//{
//	int num[200] = { 0 };
//	int k = 0;
//	for (int i = 19000600; i < 20120312; i++)
//	{
//		if (i % 2012 == 0 && i % 3 == 0 && i % 12 == 0)
//		{
//			printf("%d\n", i);
//			num[k] = i;
//			k++;
//		}
//	}
//	printf("\n");
//	for (int i = 0; i < k; i++)
//	{
//		int tmp = num[i];
//		tmp /= 100;
//		int a = tmp % 10;
//		if (a == 6)
//		{
//			printf("%d\n", num[i]);
//		}
//	}
//	return 0;
//}


//
//int main(int argc, char* argv[])
//{
//    // 请在此输入您的代码
//    unsigned long long sum = 0;
//    for (int i = 0; i < 64; i++)
//    {
//        sum += pow(2, i);
//    }
//    printf("%llu", sum);
//    return 0;
//}

//纪念日
//int main()
//{
//	int year = 1921;
//	int min = 0;
//	//int month = 7;
//	int day = 8;
//	int num1[] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
//	int num2[] = { 31,29,31,30,31,30,31,31,30,31,30,31 };
//
//	for (year = 1921; year <= 2020; year++)
//	{
//		if (year == 1921)
//		{
//			for (int i = 7; i < 12; i++)
//			{
//				day += num1[i];
//			}
//			continue;
//		}
//		if (year == 2020)
//		{
//			for (int i = 0; i < 6; i++)
//			{
//				day += num2[i];
//			}
//			break;
//		}
//		if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)
//		{
//			for (int i = 0; i < 12; i++)
//			{
//				day += num2[i];
//			}
//		}
//		else
//		{
//			for (int i = 0; i < 12; i++)
//			{
//				day += num1[i];
//			}
//		}
//	}
//	day++;
//	printf("day = %d\n", day);
//	//day -= 22;
//	min = day * 24 * 60;
//	printf("%d\n", min);
//}

//#include <iostream>
//using namespace std;
//int f[1020][1020];
//int main()
//{
//    f[0][0] = 1;
//    for (int i = 1; i <= 1010; i++)//上面一行可以放1～1010个
//        for (int j = 0; j <= i; j++)//下面一行放的范围是0～i 不能比上面多哦
//        {
//            f[i][j] += f[i - 1][j] % 2020;//可以把i+j这个数紧挨着放上面
//            if (j)
//                f[i][j] += f[i][j - 1] % 2020;//也可以放下面 注意不要越界
//        }
//    cout << f[1010][1010] << endl;
//    return 0;
//}

//int main()
//{
//	long long n;
//	scanf("%lld", &n);
//	//printf("%d ", n);
//	while (n)
//	{
//		
//		printf("%lld ", n);
//		n >>= 1;
//	}
//}

//解码
//int main()
//{
//	char str[1001];
//	for (int i = 0; i < 1001; i++)
//	{
//		str[i] = '\0';
//	}
//	gets(str);
//	int len = strlen(str);
//	for (int i = 0; i < len; i++)
//	{
//		if (isalpha(str[i]) && isdigit(str[i + 1]))
//		{
//			for (int j = 0; j < (str[i + 1] - '0'); j++)
//				printf("%c", str[i]);
//			i++;
//		}
//		else
//			printf("%c", str[i]);
//	}
//
//}
